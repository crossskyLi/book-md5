{"version":3,"sources":["fetch.js"],"names":[],"mappings":"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","file":"fetch-compiled.js","sourcesContent":["import axios from 'axios'\nimport qs from 'qs'\nimport * as _ from '../util/tool'\n\n// axios 配置\naxios.defaults.timeout = 5000;\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\naxios.defaults.baseURL = 'http://localhost:4000/';\n\n//POST传参序列化\naxios.interceptors.request.use((config) => {\n  if(config.method  === 'post'){\n    config.data = qs.stringify(config.data);\n  }\n  return config;\n},(error) =>{\n  _.toast(\"错误的传参\", 'fail');\n  return Promise.reject(error);\n});\n\n//返回状态判断\naxios.interceptors.response.use((res) =>{\n  if(!res.data.success){\n    // _.toast(res.data.msg);\n    return Promise.reject(res);\n  }\n  return res;\n}, (error) => {\n  _.toast(\"网络异常\");\n  return Promise.reject(error);\n});\n\nexport function fetch(url, params) {\n  return new Promise((resolve, reject) => {\n    axios.post(url, params)\n      .then(response => {\n        resolve(response.data);\n      }, err => {\n        reject(err);\n      })\n      .catch((error) => {\n        reject(error)\n      })\n  })\n}\n\nexport default {\n  /**\n   * 用户登录\n   */\n  Login(params) {\n    return fetch('/users/api/userLogin', params)\n  },\n\n  /**\n   * 用户注册\n   */\n  Regist(params) {\n    return fetch('/users/api/userRegist', params)\n  },\n\n  /**\n   * 发送注册验证码\n   */\n  RegistVerifiCode(tellphone) {\n    return fetch('/users/api/registVerifiCode', {tellphone: tellphone})\n  },\n\n  /**\n   * 获取约跑步列表\n   */\n  SportsList() {\n    return fetch('/api/sportList')\n  },\n\n  /**\n   * 获取约出行列表\n   */\n  TravelsList() {\n    return fetch('/api/travelList')\n  },\n\n  /**\n   * 获取约跑步详情\n   */\n  SportsDetail(id) {\n    return fetch('/api/sportDetail', {sportId: id})\n  },\n\n  /**\n   * 获取约出行详情\n   */\n  TravelsDetail(id) {\n    return fetch('/api/travelDetail', {travelId: id})\n  },\n\n  /**\n   * 获取出行活动点击次数\n   */\n  travelClicks(id) {\n    return fetch('/api/travelClickNum', {travelId: id})\n  },\n\n  /**\n   * 获取用户信息\n   */\n  UserInfo(id) {\n    return fetch('/users/api/userInfo', {userId: id})\n  },\n\n  /**\n   * 获取用户发布约行个数\n   */\n  getPubTotravelNum(id) {\n    return fetch('/users/api/getPubTotravelNum', {userId: id})\n  },\n\n  /**\n   * 获取用户自己发布的约行\n   */\n  getMyTravel(id) {\n    return fetch('/users/api/myTravel', {userId: id})\n  },\n\n  /**\n   * 发布约行活动\n   */\n  PostTravel(params) {\n    return fetch()\n  },\n\n  /**\n   * 获取全国JSON数据\n   */\n  getAddressJson() {\n    return fetch('/api/address')\n  }\n}\n"]}